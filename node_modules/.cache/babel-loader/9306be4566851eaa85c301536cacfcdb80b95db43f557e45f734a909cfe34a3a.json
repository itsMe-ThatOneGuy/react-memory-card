{"ast":null,"code":"import _toConsumableArray from\"/home/matthew/the_odin_project/react-memory-card/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"/home/matthew/the_odin_project/react-memory-card/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/matthew/the_odin_project/react-memory-card/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/home/matthew/the_odin_project/react-memory-card/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/home/matthew/the_odin_project/react-memory-card/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/matthew/the_odin_project/react-memory-card/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from\"react\";import\"./Gameboard.css\";import Card from\"./Card\";import cards from\"./cardData\";import{jsx as _jsx}from\"react/jsx-runtime\";var Gameboard=/*#__PURE__*/function(_React$Component){_inherits(Gameboard,_React$Component);var _super=_createSuper(Gameboard);function Gameboard(props){var _this;_classCallCheck(this,Gameboard);_this=_super.call(this,props);_this.state={cardList:cards};_this.shuffleCards=_this.shuffleCards.bind(_assertThisInitialized(_this));_this.gameLoop=_this.gameLoop.bind(_assertThisInitialized(_this));return _this;}_createClass(Gameboard,[{key:\"getSelectedCardIndex\",value:function getSelectedCardIndex(e){var selectCard=e.target.id;var cardIndex=this.state.cardList.findIndex(function(card){return selectCard===\"Image\".concat(card.id);});return cardIndex;}},{key:\"updateCardClick\",value:function updateCardClick(card){var newList=_toConsumableArray(this.state.cardList);newList[card].clicked=true;this.setState({cardList:newList});}},{key:\"shuffleCards\",value:function shuffleCards(){var shuffled=_toConsumableArray(this.state.cardList).sort(function(){return Math.random()-0.5;});this.setState({cardList:shuffled});}},{key:\"resetCards\",value:function resetCards(){var allCards=_toConsumableArray(this.state.cardList);for(var index=0;index<allCards.length;index++){var element=allCards[index];element.clicked=false;}this.setState({cardList:allCards});}},{key:\"gameLoop\",value:function gameLoop(e){var currentCardList=this.state.cardList;var selectedCard=this.getSelectedCardIndex(e);console.log(currentCardList[selectedCard].clicked);if(currentCardList[selectedCard].clicked===false){this.updateCardClick(selectedCard);this.props.updateScores();this.shuffleCards();}else{this.resetCards();this.props.clearScore();this.shuffleCards();}}},{key:\"componentDidMount\",value:function componentDidMount(){this.shuffleCards();}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsx(\"div\",{className:\"gameboard\",children:this.state.cardList.map(function(e){return/*#__PURE__*/_jsx(Card,{info:e,selectCard:_this2.gameLoop},e.id);})});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){}}]);return Gameboard;}(React.Component);export default Gameboard;","map":{"version":3,"names":["React","Card","cards","jsx","_jsx","Gameboard","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","cardList","shuffleCards","bind","_assertThisInitialized","gameLoop","_createClass","key","value","getSelectedCardIndex","e","selectCard","target","id","cardIndex","findIndex","card","concat","updateCardClick","newList","_toConsumableArray","clicked","setState","shuffled","sort","Math","random","resetCards","allCards","index","length","element","currentCardList","selectedCard","console","log","updateScores","clearScore","componentDidMount","render","_this2","className","children","map","info","componentDidUpdate","Component"],"sources":["/home/matthew/the_odin_project/react-memory-card/src/components/Gameboard.js"],"sourcesContent":["import React from \"react\";\nimport \"./Gameboard.css\";\nimport Card from \"./Card\";\nimport cards from \"./cardData\";\n\nclass Gameboard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcardList: cards,\n\t\t};\n\n\t\tthis.shuffleCards = this.shuffleCards.bind(this);\n\t\tthis.gameLoop = this.gameLoop.bind(this);\n\t}\n\n\tgetSelectedCardIndex(e) {\n\t\tconst selectCard = e.target.id;\n\t\tconst cardIndex = this.state.cardList.findIndex(\n\t\t\t(card) => selectCard === `Image${card.id}`\n\t\t);\n\t\treturn cardIndex;\n\t}\n\n\tupdateCardClick(card) {\n\t\tconst newList = [...this.state.cardList];\n\t\tnewList[card].clicked = true;\n\t\tthis.setState({\n\t\t\tcardList: newList,\n\t\t});\n\t}\n\n\tshuffleCards() {\n\t\tconst shuffled = [...this.state.cardList].sort(() => Math.random() - 0.5);\n\t\tthis.setState({\n\t\t\tcardList: shuffled,\n\t\t});\n\t}\n\n\tresetCards() {\n\t\tlet allCards = [...this.state.cardList];\n\t\tfor (let index = 0; index < allCards.length; index++) {\n\t\t\tconst element = allCards[index];\n\t\t\telement.clicked = false;\n\t\t}\n\t\tthis.setState({\n\t\t\tcardList: allCards,\n\t\t});\n\t}\n\n\tgameLoop(e) {\n\t\tconst currentCardList = this.state.cardList;\n\t\tconst selectedCard = this.getSelectedCardIndex(e);\n\t\tconsole.log(currentCardList[selectedCard].clicked);\n\t\tif (currentCardList[selectedCard].clicked === false) {\n\t\t\tthis.updateCardClick(selectedCard);\n\t\t\tthis.props.updateScores();\n\t\t\tthis.shuffleCards();\n\t\t} else {\n\t\t\tthis.resetCards();\n\t\t\tthis.props.clearScore();\n\t\t\tthis.shuffleCards();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.shuffleCards();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"gameboard\">\n\t\t\t\t{this.state.cardList.map((e) => {\n\t\t\t\t\treturn <Card key={e.id} info={e} selectCard={this.gameLoop} />;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidUpdate() {}\n}\n\nexport default Gameboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}